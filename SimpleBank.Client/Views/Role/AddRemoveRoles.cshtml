@model SimpleBankClient.Entity.Dto.AddRemoveRoleDto

@{
    Layout = "_HomeLayout";
    ViewData["Title"] = "Assign or Remove Roles";
}

<div class="d-flex">
    @await Html.PartialAsync("_SidebarPartial")

    <!-- Main content -->
    <div class="p-4 flex-grow-1">
        <div class="card shadow-sm border-0 rounded-4">
            <div class="card-header bg-primary text-white text-center">
                <h4>Manage Roles for <span class="fw-bold">@Model.UserName</span></h4>
            </div>
            <div class="card-body">

                <form asp-action="AddRemoveRoles" method="post">
                    <input type="hidden" asp-for="UserName" />
                    <input type="hidden" asp-for="UserId" />

                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-hover w-100">
                            <thead class="table-info text-center">
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.AddRemoveRoles.First().RoleId)</th>
                                    <th>@Html.DisplayNameFor(model => model.AddRemoveRoles.First().RoleName)</th>
                                    <th>@Html.DisplayNameFor(model => model.AddRemoveRoles.First().IsSelected)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.AddRemoveRoles.Count; i++)
                                {
                                    <tr class="text-center align-middle">
                                        <td>
                                            @Html.DisplayFor(modelItem => Model.AddRemoveRoles[i].RoleId)
                                            <input type="hidden" asp-for="@Model.AddRemoveRoles[i].RoleId" />
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => Model.AddRemoveRoles[i].RoleName)
                                            <input type="hidden" asp-for="@Model.AddRemoveRoles[i].RoleName" />
                                        </td>
                                        <td>
                                            <input type="checkbox" asp-for="@Model.AddRemoveRoles[i].IsSelected" class="form-check-input role-checkbox" />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="text-end mt-3">
                        <input type="submit" class="btn btn-success me-2" value="Assign Roles" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $(".role-checkbox").change(function () {
                if ($(this).is(":checked")) {
                    // Uncheck all other checkboxes
                    $(".role-checkbox").not(this).prop("checked", false);
                }
                // If unchecked → allow zero roles selected
            });
        });
    </script>
}
